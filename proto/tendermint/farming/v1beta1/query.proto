syntax = "proto3";

package cosmos.farming.v1beta1;

import "tendermint/farming/v1beta1/farming.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/tendermint/farming/x/farming/types";

// Query defines the gRPC query service for the farming module.
service Query {
  // Params returns parameters of the farming module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/params";
  }

  // Plans returns all plans.
  rpc Plans(QueryPlansRequest) returns (QueryPlansResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/plans";
  }

  // Plan returns a specific plan.
  rpc Plan(QueryPlanRequest) returns (QueryPlanResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/plans/{plan_id}";
  }

  // Stakings returns all stakings.
  rpc Stakings(QueryStakingsRequest) returns (QueryStakingsResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/stakings";
  }

  // FarmerStaking returns a staking owned by the farmer.
  rpc FarmerStaking(QueryFarmerStakingRequest) returns (QueryFarmerStakingResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/stakings/{farmer}";
  }

  // Rewards returns all rewards.
  rpc Rewards(QueryRewardsRequest) returns (QueryRewardsResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/rewards";
  }

  // FarmerRewards returns all the rewards owned by the farmer.
  rpc FarmerRewards(QueryFarmerRewardsRequest) returns (QueryFarmerRewardsResponse) {
    option (google.api.http).get = "/cosmos/farming/v1beta1/rewards/{farmer}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryPlansRequest is the request type for the Query/Plans RPC method.
message QueryPlansRequest {
  string                                type                 = 1;
  string                                farming_pool_address = 2;
  string                                reward_pool_address  = 3;
  string                                termination_address  = 4;
  string                                staking_coin_denom   = 5;
  cosmos.base.query.v1beta1.PageRequest pagination           = 6;
}

// QueryPlansResponse is the response type for the Query/Plans RPC method.
message QueryPlansResponse {
  repeated google.protobuf.Any           plans      = 1 [(cosmos_proto.accepts_interface) = "PlanI"];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryPlanRequest is the request type for the Query/Plan RPC method.
message QueryPlanRequest {
  uint64 plan_id = 1;
}

// QueryPlanResponse is the response type for the Query/Plan RPC method.
message QueryPlanResponse {
  google.protobuf.Any plan = 1 [(cosmos_proto.accepts_interface) = "PlanI"];
}

// QueryStakingsRequest is the request type for the Query/Stakings RPC method.
message QueryStakingsRequest {
  string                                staking_coin_denom = 1 [(gogoproto.moretags) = "yaml:\"staking_coin_denom\""];
  cosmos.base.query.v1beta1.PageRequest pagination         = 2;
}

// QueryStakingsResponse is the response type for the Query/Stakings RPC method.
message QueryStakingsResponse {
  repeated Staking                       stakings   = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryFarmerStakingRequest is the request type for the Query/FarmerStaking RPC method.
message QueryFarmerStakingRequest {
  string farmer = 1;
}

// QueryFarmerStakingResponse is the response type for the Query/FarmerStaking RPC method.
message QueryFarmerStakingResponse {
  Staking staking = 1;
}

// QueryRewardsRequest is the request type for the Query/Rewards RPC method.
message QueryRewardsRequest {
  string                                staking_coin_denom = 1 [(gogoproto.moretags) = "yaml:\"staking_coin_denom\""];
  cosmos.base.query.v1beta1.PageRequest pagination         = 2;
}

// QueryRewardsResponse is the response type for the Query/Rewards RPC method.
message QueryRewardsResponse {
  repeated Reward                        rewards    = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryFarmerRewardsRequest is the request type for the Query/FarmerRewards RPC method.
message QueryFarmerRewardsRequest {
  string                                farmer             = 1;
  string                                staking_coin_denom = 2 [(gogoproto.moretags) = "yaml:\"staking_coin_denom\""];
  cosmos.base.query.v1beta1.PageRequest pagination         = 3;
}

// QueryFarmerRewardsResponse is the response type for the Query/FarmerRewards RPC method.
message QueryFarmerRewardsResponse {
  repeated Reward                        rewards    = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
